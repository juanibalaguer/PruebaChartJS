#pragma checksum "C:\Users\garba\source\repos\PruebaChartJS\PruebaChartJS\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "6aa44f95d66079644771c6ec3f074e44ebaf8dc5"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\garba\source\repos\PruebaChartJS\PruebaChartJS\Views\_ViewImports.cshtml"
using PruebaChartJS;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\garba\source\repos\PruebaChartJS\PruebaChartJS\Views\_ViewImports.cshtml"
using PruebaChartJS.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6aa44f95d66079644771c6ec3f074e44ebaf8dc5", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9275cfa5248f94b67b4cb92433df73fe4ab90ff3", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\garba\source\repos\PruebaChartJS\PruebaChartJS\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Super chartjs";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""text-center"">
    <h1 class=""display-4"">Probando ChartJS</h1>

    <div class=""container"">
        <canvas id=""myChart"" width=""100"" height=""100""></canvas>
    </div>
    <script>
        const labels = [1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008,
            2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018];
        const poblacionTotal = [32.5, 32.9, 33.4, 33.9, 34.3, 34.7, 35.1, 35.6, 36.0, 36.7, 37.1, 37.5, 37.8, 38.2, 38.5, 38.9, 39.3,
            39.7, 40.1, 40.7, 41.2, 41.7, 42.2, 42.6, 43.1, 43.5, 44.0, 44.5, 44.7];
        const poblacionMujeres = [16.1, 16.3, 16.4, 16.5, 16.7, 16.9, 17.2, 17.4, 17.6, 17.8, 18.1, 18.3, 18.5, 18.7, 18.9, 19.1, 19.3, 19.5, 19.7, 19.9, 21.1,
            21.3, 21.5, 21.7, 21.9, 22.1, 22.3, 22.5, 22.7]
        const poblacionHombres = [15.8, 16.1, 16.3, 16.5, 16.7, 16.9, 17.1, 17.3, 17.5, 17.7, 18.8, 18.0, 18.2, 18.4, 18.6, 18.8, 19.0,
            19.2, 19.4, 19.6, 1");
            WriteLiteral(@"9.8, 20.0, 20.3, 20.5, 20.7, 21.0, 21.2, 21.4, 21.6];
        console.log()
        const ctx = document.getElementById('myChart').getContext('2d');
        const myChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Población total en Argentina',
                    data: poblacionTotal,
                    borderColor: 'red',
                    fill: false

                },
                {
                    label: 'Población de hombres en Argentina',
                    data: poblacionHombres,
                    borderColor: 'green',
                    fill: false

                },
                {
                    label: 'Población de mujeres en Argentina',
                    data: poblacionMujeres,
                    borderColor: 'blue',
                    fill: false

                },]
            },
            options: {
                scales: {");
            WriteLiteral(@"
                    yAxes: [{
                        ticks: {
                            beginAtZero: true,
                            callback: function (value, index, values) {
                                return value + "" mill"";
                            }
                        }
                    }]
                }
            }
        });
    </script>
</div>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
